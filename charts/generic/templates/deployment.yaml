---
{{- $global := $ }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic.fullname" . }}
  labels:
    {{- include "generic.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "generic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.pod.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "generic.selectorLabels" . | nindent 8 }}
        {{- with .Values.pod.labels }}
          {{- toYaml . | nindent 8}}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pod.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- with .Values.pod.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.secretEnv }}
              {{- range $secret := .}}
                {{- if or (not (hasKey $secret "name" )) (not (hasKey $secret "value")) }}
                  {{- fail "secretEnv entries require both a 'name' and a 'value' key" }}
                {{- end }}
            - name: {{ get $secret "name" }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "generic.fullname" $global }}-secret-env
                  key: {{ get $secret "name" }}
              {{- end }}
            {{- end }}
            {{- if and (not .Values.pod.env) (not .Values.secretEnv) }}
            []
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.pod.port }}
              protocol: TCP
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.storage.create }}
            - name: storage
              mountPath: {{ .Values.storage.mountPath }}
            {{- end -}}
            {{- with .Values.pod.volumeMounts -}}
              {{- . | toYaml | nindent 12 }}
            {{- end -}}
            {{- with .Values.mountConfig -}}
              {{- include "generic.config.volumeMount" (dict "value" . "volumeName" "config-volume") | nindent 12 }}
            {{- end }}
            {{- with .Values.mountSecret }}
              {{- include "generic.config.volumeMount" (dict "value" . "volumeName" "secret-volume") | nindent 12 }}
            {{- end }}
          {{- if not (or .Values.pod.volumeMounts .Values.storage.create .Values.mountConfig .Values.mountSecret) }}
            []
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.pod.volumes .Values.storage.create }}
      volumes:
        {{- if .Values.mountConfig }}
        - name: config-volume
          configMap:
            name: {{ include "generic.fullname" . }}-config
            defaultMode: {{ .Values.mountConfigMode }}
        {{- end }}
        {{- if .Values.mountSecret }}
        - name: secret-volume
          secret:
            secretName: {{ include "generic.fullname" . }}-secret-mount
            defaultMode: {{ .Values.mountSecretMode }}
        {{- end }}
        {{- if .Values.storage.create }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "generic.fullname" . }}-storage
        {{- end}}
        {{- with .Values.pod.volumes }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
